probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
bag_a <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[1,]))
}
bag_b <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[2,]))
}
bag_c <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[3,]))
}
bag_d <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[4,]))
}
choose_bags <- function() {
return(sample(c("A", "B", "C", "D"), 1, replace = TRUE, prob = p_bags))
}
candies = 5
result = choose_bags()
candies = switch(result, "A" = bag_a(candies), "B" = bag_b(candies), "C" = bag_c(candies), "D" = bag_d(candies))
print(result)
print(candies)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
bag_a <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[1,]))
}
bag_b <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[2,]))
}
bag_c <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[3,]))
}
bag_d <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[4,]))
}
choose_bags <- function() {
return(sample(c("A", "B", "C", "D"), 1, replace = TRUE, prob = p_bags))
}
candies = 5
result = choose_bags()
candies = switch(result, "A" = bag_a(candies), "B" = bag_b(candies), "C" = bag_c(candies), "D" = bag_d(candies))
print(result)
print(candies)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (i in 1:ncol(conditional_prob)) {
temp = 1
for (candy in 1:length(candies)) {
temp = temp * probabilities[i, candies[candy]]
}
conditional_prob[i] = temp
}
print(conditional_prob * p_bags)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
#P(Result)
# result_prob = 0
# for (bag in 1:nrow(probabilities)) {
#   prob_per_bag = 1
#   for (candy in 1:length(candies)) {
#     prob_per_bag
#   }
# }
#P(Result|Bag)
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[i] = prob
}
#P(result)
p_result = sum(conditional_prob * p_bags)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
#P(Result)
# result_prob = 0
# for (bag in 1:nrow(probabilities)) {
#   prob_per_bag = 1
#   for (candy in 1:length(candies)) {
#     prob_per_bag
#   }
# }
#P(Result|Bag)
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[i] = prob
}
#P(result)
p_result = sum(conditional_prob * p_bags)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
bag_a <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[1,]))
}
bag_b <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[2,]))
}
bag_c <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[3,]))
}
bag_d <- function(num_rolls) {
return(sample(1:2, num_rolls, replace=TRUE, prob=probabilities[4,]))
}
choose_bags <- function() {
return(sample(c("A", "B", "C", "D"), 1, replace = TRUE, prob = p_bags))
}
candies = 5
result = choose_bags()
candies = switch(result, "A" = bag_a(candies), "B" = bag_b(candies), "C" = bag_c(candies), "D" = bag_d(candies))
print(result)
print(candies)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
#P(Result)
# result_prob = 0
# for (bag in 1:nrow(probabilities)) {
#   prob_per_bag = 1
#   for (candy in 1:length(candies)) {
#     prob_per_bag
#   }
# }
#P(Result|Bag)
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[i] = prob
}
#P(result)
p_result = sum(conditional_prob * p_bags)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
#P(Result)
# result_prob = 0
# for (bag in 1:nrow(probabilities)) {
#   prob_per_bag = 1
#   for (candy in 1:length(candies)) {
#     prob_per_bag
#   }
# }
#P(Result|Bag)
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[i] = prob
}
#P(result)
p_result = sum(conditional_prob * p_bags)
print(conditional_prob)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[i] = prob
}
p_result = sum(conditional_prob * p_bags)
print(conditional_prob)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[bag] = prob
}
p_result = sum(conditional_prob * p_bags)
print(conditional_prob)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[i, candies[candy]]
}
conditional_prob[bag] = prob
}
p_result = sum(conditional_prob * p_bags)
print(conditional_prob)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[bag, candies[candy]]
}
conditional_prob[bag] = prob
}
p_result = sum(conditional_prob * p_bags)
print(conditional_prob)
print(conditional_prob * p_bags)
print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
conditional_prob = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(conditional_prob)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[bag, candies[candy]]
}
conditional_prob[bag] = prob
}
p_result = sum(conditional_prob * p_bags)
print(conditional_prob)
print((conditional_prob * p_bags) / p_result)
#print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
p_result_bag = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(p_result_bag)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[bag, candies[candy]]
}
p_result_bag[bag] = prob
}
p_result = sum(p_result_bag * p_bags)
print(p_result_bag)
print((p_result_bag * p_bags) / p_result)
#print(p_result)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
p_result_bag = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(p_result_bag)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[bag, candies[candy]]
}
p_result_bag[bag] = prob
}
p_result = sum(p_result_bag * p_bags)
print(p_result_bag)
print((p_result_bag * p_bags) / p_result)
print(p_result_bag * p_pags)
p_bags = c(.1, .4, .3, .2)
probabilities = matrix(nrow = 4, ncol = 2, dimnames=list(c("Bag A", "Bag B", "Bag C", "Bag D"),c("Apple", "Cherry")))
#bag a
probabilities[1,1] = 1
probabilities[1,2] = 0
#bag b
probabilities[2,1] = .75
probabilities[2,2] = .25
#bag c
probabilities[3,1] = .25
probabilities[3,2] = .75
#bag d
probabilities[4,1] = 0
probabilities[4,2] = 1
print(probabilities)
candies = c(1, 1, 1, 1, 1)
print(candies)
p_result_bag = matrix(nrow = 1, ncol = 4, dimnames=list(c("Result"), c("A", "B", "C", "D")))
for (bag in 1:ncol(p_result_bag)) {
prob = 1
for (candy in bag:length(candies)) {
prob = prob * probabilities[bag, candies[candy]]
}
p_result_bag[bag] = prob
}
p_result = sum(p_result_bag * p_bags)
print(p_result_bag)
print((p_result_bag * p_bags) / p_result)
print(p_result_bag * p_bags)
