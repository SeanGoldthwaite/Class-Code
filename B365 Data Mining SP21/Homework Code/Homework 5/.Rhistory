max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
sprintf("Degree = %g", degree)
print("Coefficients:")
print(solution)
}
print(coefficients)
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
sprintf("Degree = %g", degree)
print("Coefficients:")
print(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
print(degree)
print("Coefficients:")
print(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
print("Degree: ")
print(degree)
print("Coefficients:")
print(solution)
print("")
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
print("Degree: ")
print(degree)
print("Coefficients:")
print(solution)
print(1)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
print("Degree: ")
print(degree)
print("Coefficients:")
print(solution)
print(/n)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
print("\nDegree: ")
print(degree)
print("Coefficients:")
print(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\nDegree: ")
print(degree)
print("Coefficients:")
print(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\nDegree: ")
cat(degree)
cat("Coefficients:")
cat(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\nDegree: " + degree)
cat("\nCoefficients:\n")
cat(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\nDegree: ")
cat(degree)
cat("\nCoefficients:\n")
cat(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients:\n")
cat(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 4
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients:\n")
cat(solution)
}
rownames(sse_collection) = c("sse")
#colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients:\n")
cat(solution)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients:\n")
cat(solution)
cat("\n")
cat(sse)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients:\n")
cat(solution)
cat("\nsse: ")
cat(sse)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients: ")
cat(solution)
cat("\nsse: ")
cat(sse)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = matrix(c(0,3,1,2,2,3,3,6), nrow = 4, ncol = 2, byrow = TRUE)
rownames(data) = c("p1", "p2", "p3", "p4")
#colnames(data) = c("X", "Y")
print(data)
length = length(data[,1])
x_coords = as.matrix(data[,1])
y_coords = as.matrix(data[,2])
Y = as.matrix(data[,2])
max_degree = 3
sse_collection = matrix(nrow = 1, ncol = max_degree)
for (degree in 1:max_degree) {
X = rep(1, length)
Y = y_coords
for (i in 1:degree) {
X = cbind(X, x_coords ^ i)
}
solution = solve(t(X) %*% X, t(X) %*% Y)
error = Y - (X %*% solution)
sse = t(error) %*% error
sse_collection[degree] = sse
cat("\n\nDegree: ")
cat(degree)
cat("\nCoefficients (x^0 -> x^degree): ")
cat(solution)
cat("\nsse: ")
cat(sse)
}
rownames(sse_collection) = c("sse")
colnames(sse_collection) = c("x^1","x^2","x^3")
print(sse_collection)
data = cars
X = data[,1] #speed
Y = data[,2] #distance
X = cbind(rep(1, nrow(data)), X)
solution = solve(t(X) %*% X, t(X) %*% Y)
dimnames(solution) = list(c("constant","X"), c("Coefficient"))
print(solution)
sprintf("For every unit increase in speed, a %g in distance is expected, based on the dataset",solution[2,1])
